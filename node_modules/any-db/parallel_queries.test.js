require('./helpers').allPools('Parallel pool queries', function (pool, t) {
	t.plan(2)

	pool.acquire(function (err, conn) {
		if (err) throw err
		conn.query('DROP TABLE par_test', function () {/* ignore missing table errors */})
		conn.query('CREATE TABLE par_test (my_col int)', function () {
			if (err) throw err
			pool.acquire(function (err, conn2) {
				conn.query('INSERT INTO par_test (my_col) VALUES (1)')
				conn.query('SELECT * FROM par_test', function (err, res) {
					pool.release(conn)
					if (err) throw err
					t.ok(res.rows.length, 'rows returned for serial query')
				})
				conn2.query('SELECT * FROM par_test', function (err, res) {
					pool.release(conn2)
					if (err) throw err
					console.log(res.rows)
					t.ok(!res.rows.length, 'no rows returned for parallel query')
				})
			})
		})
	})
})
